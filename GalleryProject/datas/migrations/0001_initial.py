# Generated by Django 4.2.13 on 2024-08-02 04:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=4000, null=True)),
                ('image', models.URLField(null=True)),
                ('pageUrl', models.URLField(null=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('period', models.CharField(max_length=200, null=True)),
                ('time', models.CharField(max_length=200, null=True)),
                ('place', models.CharField(max_length=200, null=True)),
                ('contact', models.CharField(max_length=200, null=True)),
                ('audience', models.CharField(max_length=200, null=True)),
            ],
            options={
                'ordering': ['-period'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, editable=False, max_length=150)),
                ('profile', models.URLField(blank=True, editable=False)),
                ('comment', models.CharField(max_length=128, verbose_name='댓글')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nickname', models.CharField(blank=True, editable=False, max_length=150)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datas.datamodel')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Scrap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_scrapped', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, editable=False, max_length=150)),
                ('image', models.URLField(blank=True, editable=False, max_length=150)),
                ('period', models.CharField(blank=True, editable=False, max_length=150)),
                ('place', models.CharField(blank=True, editable=False, max_length=150)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datas.datamodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'data')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='datas.datamodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'item')},
            },
        ),
    ]
